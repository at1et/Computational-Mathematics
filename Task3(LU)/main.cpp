#include <iostream>
#include <vector>

using namespace std;

int main() {
    int n = 6;

    // Матрица системы уравнений
    vector<vector<double>> A = {
        {9, 1, 5, 7, 6, 28},
        {5, 2, 4, 9, 9, 29},
        {1, 5, 5, 3, 7, 21},
        {1, 7, 8, 2, 6, 24},
        {3, 1, 2, 1, 2, 9}
    };

    // Матрицы L и U для разложения
    vector<vector<double>> L(n, vector<double>(n, 0));
    vector<vector<double>> U(n, vector<double>(n, 0));

    // Векторы для хранения промежуточных результатов и решения
    vector<double> Y(n, 0);
    vector<double> X(n, 0);

    // Вектор свободных коэффициентов
    vector<double> C = {28, 29, 21, 24, 9};

    // Вычисление элементов матриц L и U
    for (int i = 0; i < n; i++) {
        L[i][0] = A[i][0]; // Элементы матрицы L на главной диагонали равны соответствующим элементам A
    }

    for (int j = 1; j < n; j++) {
        U[0][j] = A[0][j] / L[0][0]; // Элементы матрицы U вычисляются из матрицы A и L
    }

    for (int k = 1; k < n; k++) {
        for (int i = k; i < n; i++) {
            L[i][k] = A[i][k]; // Элементы матрицы L заполняются из матрицы A
            for (int m = 0; m < k; m++) {
                L[i][k] -= L[i][m] * U[m][k]; // Вычитание произведения элементов матрицы L и U
            }
        }

        if (k <= n - 2) {
            for (int j = k + 1; j < n; j++) {
                U[k][j] = A[k][j]; // Элементы матрицы U вычисляются из матрицы A
                for (int m = 0; m < k; m++) {
                    U[k][j] -= L[k][m] * U[m][j]; // Вычитание произведения элементов матрицы L и U
                }
                U[k][j] /= L[k][k]; // Деление элемента матрицы U на соответствующий элемент матрицы L
            }
        }
    }

    // Вычисление вектора Y
    Y[0] = C[0] / L[0][0]; // Первый элемент вектора Y
    for (int i = 1; i < n; i++) {
        Y[i] = C[i]; // Свободные коэффициенты
        for (int m = 0; m < i; m++) {
            Y[i] -= L[i][m] * Y[m]; // Вычитание произведения элементов матрицы L и вектора Y
        }
        Y[i] /= L[i][i]; // Деление элемента вектора Y на соответствующий элемент матрицы L
    }

    // Вычисление вектора X
    X[n - 1] = Y[n - 1]; // Последний элемент вектора X
    for (int i = n - 2; i >= 0; i--) {
        X[i] = Y[i]; // Перенос значений из вектора Y в вектор X
        for (int m = i + 1; m < n; m++) {
            X[i] -= U[i][m] * X[m]; // Вычитание произведения элементов матрицы U и вектора X
        }
    }

    // Вывод вектора X
    cout << "Вектор решения системы X = ";
    for (int i = 0; i < n; i++) {
        cout << X[i] << " ";
    }
    cout << endl;

    return 0;
}
